# map definition file
# -------------------
# general hint for this yaml config file:
# - do not use tabs or unnecessary white spaces
#
# useful links:
# - https://github.com/mapnik/mapnik/wiki/SymbologySupport
# - http://mapnik.org/mapnik-reference
#
# basic symbolizers:
# - LinePatternSymbolizer (https://github.com/mapnik/mapnik/wiki/LinePatternSymbolizer)
# - LineSymbolizer (https://github.com/mapnik/mapnik/wiki/LineSymbolizer)
# - MarkersSymbolizer (https://github.com/mapnik/mapnik/wiki/MarkersSymbolizer)
# - PointSymbolizer (https://github.com/mapnik/mapnik/wiki/PointSymbolizer)
# - PolygonPatternSymbolizer (https://github.com/mapnik/mapnik/wiki/PolygonPatternSymbolizer)
# - PolygonSymbolizer (https://github.com/mapnik/mapnik/wiki/PolygonSymbolizer)
# - TextSymbolizer (https://github.com/mapnik/mapnik/wiki/TextSymbolizer)
#
# advanced symbolizers:
# - BuildingSymbolizer (https://github.com/mapnik/mapnik/wiki/BuildingSymbolizer)
# - RasterSymbolizer (https://github.com/mapnik/mapnik/wiki/RasterSymbolizer)
# - ShieldSymbolizer (https://github.com/mapnik/mapnik/wiki/ShieldSymbolizer)
#
# purpose:
# author :
# release:
#
# frame (2 + 18 = bleed + frame): generate frame and border
# - printmaps passepartout 297.0 210.0 20.0 20.0 20.0 20.0
#
# crop marks: generate crop marks for all four corners
# - printmaps cropmarks 297.0 210.0 5.0
#
# scale bar: generate scale bar (nature length 2000 meters)
# - printmaps bearingline 54.82 8.50 90.0 2000.0 "2000 Meter" scalebar-2000
# - uncomment sections marked as 'scale bar'
#
# track: print user provided GPX track onto the map
# - uncomment sections marked as 'track'

# service configuration
# ---------------------

# URL of webservice
ServiceURL: http://printmaps-osm.de:8282/api/beta2/maps/

# proxy configuration (not to be done here)
# - set the environment variable $HTTP_PROXY on your local system
# - e.g. export HTTP_PROXY=http://user:password@proxy.server:port

# essential map attributes (required)
# -----------------------------------

# file format (png, pdf, svg)
Fileformat: png

# scale as in "1:10000" (e.g. 10000, 25000)
Scale: 50000

# width and height (millimeter, e.g. 609.6)
PrintWidth: 297.0
PrintHeight: 210.0

# center coordinates (decimal degrees, e.g. 51.9506)
Latitude: 36.7100
Longitude: -4.3760
# UTM Zone: 30S
# UTM Easting: 378907.29
# UTM Northing: 4064694.36

# style / design (osm-carto, osm-carto-mono, osm-carto-ele20, schwarzplan, schwarzplan+, raster10, transparent)
# osm-carto: OpenStreetMap Carto Style
# osm-carto-mono: OpenStreetMap Carto Monochrome Style
# osm-carto-ele20: OpenStreetMap Carto Elevation Style (20 m)
# schwarzplan: Figure Ground Plan (buildings)
# schwarzplan+: Figure Ground Plan Plus (buildings, water areas, highways)
# raster10: Map canvas divided into a 10x10 raster
# transparent: Transparent map canvas
# request service capabilities to get a list of all available map styles
Style: osm-carto-ele20

# map projection, EPSG code as number (without prefix "EPSG:")
# e.g. 3857 (EPSG:3857 / WGS84 / Web Mercator) (used by Google/Bing/OpenStreetMap)
# e.g. 32632 (EPSG:32632 / WGS 84 / UTM Zone 32N)
# e.g. 27700 (EPSG:27700 / OSGB 1936 / British National Grid)
# e.g. 2056 (EPSG:2056 / CH1903+ / LV95)
Projection: 3857

# advanced map attributes (optional)
# ----------------------------------

# layers to hide (see service capabilities for possible values)
# e.g. hide admin borders: admin-low-zoom,admin-mid-zoom,admin-high-zoom,admin-text
# e.g. hide nature reserve borders: nature-reserve-boundaries,nature-reserve-text
# e.g. hide tourism borders (theme park, zoo): tourism-boundary
# e.g. hide highway shields: roads-text-ref-low-zoom,roads-text-ref
# e.g. hide aera texts: text-poly-low-zoom,text-poly
HideLayers: admin-low-zoom,admin-mid-zoom,admin-high-zoom,admin-text,nature-reserve-boundaries,nature-reserve-text

# user defined objects (optional, draw order remains)
# ---------------------------------------------------
#
# data object defined by ...
# style: object style
# srs: spatial reference system (is always '+init=epsg:4326' for gpx and kml)
# type: type of data source (ogr, shape, gdal, csv)
# file: name of data objects file
# layer: data layer to extract (only required for ogr)
#
# item object defined by ...
# style: object style
# well-known-text: object definition
#
# well-known-text:
#   POINT, LINESTRING, POLYGON, MULTIPOINT, MULTILINESTRING, MULTIPOLYGON
#   all values are in millimeter (reference X0 Y0: lower left map corner)
#
# font sets:
#   fontset-0: Noto Fonts normal
#   fontset-1: Noto Fonts italic
#   fontset-2: Noto Fonts bold

UserObjects:

# 'track'
#- Style: <LineSymbolizer stroke='firebrick' stroke-width='4' stroke-linecap='round' />
#  SRS: '+init=epsg:4326'
#  Type: ogr
#  File: mytrack.gpx
#  Layer: tracks

# 'scale bar' (use always stroke-linecap='butt')
#- Style: |
#         <LineSymbolizer stroke='dimgray' stroke-width='4.0' stroke-linecap='butt' />
#         <TextSymbolizer fontset-name='fontset-2' size='12' fill='dimgray' halo-radius='1' halo-fill='rgba(255, 255, 255, 0.6)' placement='line' dy='-6' allow-overlap='true'>[name]</TextSymbolizer>
#  SRS: '+init=epsg:4326'
#  Type: ogr
#  File: scalebar-2000.geojson
#  Layer: OGRGeoJSON

# utm latitude (horizontal) grid lines (1.000 meter)
- Style: <LineSymbolizer stroke='dimgray' stroke-width='0.5' stroke-linecap='round' />
  SRS: '+init=epsg:4326'
  Type: ogr
  File: utmlatgrid1000.geojson
  Layer: OGRGeoJSON

# utm longitude (vertical) grid lines (1.000 meter)
- Style: <LineSymbolizer stroke='dimgray' stroke-width='0.5' stroke-linecap='round' />
  SRS: '+init=epsg:4326'
  Type: ogr
  File: utmlongrid1000.geojson
  Layer: OGRGeoJSON

# 100 kilometer square IDs for zone 32U
# source: http://earth-info.nga.mil/GandG/coordsys/grids/mgrs_100km_dloads.html
- Style: <LineSymbolizer stroke='black' stroke-width='1.0' stroke-linecap='round' />
  SRS: '+init=epsg:4326'
  Type: shape
  File: MGRS_100kmSQ_ID_30S.shp

## 100 kilometer square IDs for zone 32T
## source: http://earth-info.nga.mil/GandG/coordsys/grids/mgrs_100km_dloads.html
#- Style: <LineSymbolizer stroke='black' stroke-width='1.0' stroke-linecap='round' />
#  SRS: '+init=epsg:4326'
#  Type: shape
#  File: MGRS_100kmSQ_ID_32T.shp

# frame
- Style: <PolygonSymbolizer fill='white' fill-opacity='1.0' />
  WellKnownText: POLYGON((0.0 0.0, 0.0 210.0, 297.0 210.0, 297.0 0.0, 0.0 0.0), (20.0 20.0, 20.0 190.0, 277.0 190.0, 277.0 20.0, 20.0 20.0))

# border (around map area)
- Style: <LineSymbolizer stroke='dimgray' stroke-width='1.0' stroke-linecap='square' />
  WellKnownText: LINESTRING(20.0 20.0, 20.0 190.0, 277.0 190.0, 277.0 20.0, 20.0 20.0)

# crop marks (only the half line width is visible)
- Style: <LineSymbolizer stroke='dimgray' stroke-width='1.5' stroke-linecap='square' />
  WellKnownText: MULTILINESTRING((5.0 0.0, 0.0 0.0, 0.0 5.0), (5.0 210.0, 0.0 210.0, 0.0 205.0), (292.0 210.0, 297.0 210.0, 297.0 205.0), (292.0 0.0, 297.0 0.0, 297.0 5.0))

# main title (top)
- Style: <TextSymbolizer fontset-name='fontset-2' size='12' fill='dimgray' allow-overlap='true'>'OSM  ·  Emmendingen  ·  40x40km  ·  1:50000  ·  Zonenfelder 32U/32T  ·  Meldequadrate LU/MU'</TextSymbolizer>
  WellKnownText: POINT(148.5 203.5)

# technical map parameters (bottom)
- Style: <TextSymbolizer fontset-name='fontset-0' size='12' fill='dimgray' allow-overlap='true'>'Projektion EPSG:32632 (UTM)  ·  Gitter 1000-Meter  ·  Beschriftung UTMREF/MGRS  ·  Meridiankonvergenz 0°54\'West  ·  Nadelabweichung 3°13\'Ost'</TextSymbolizer>
  WellKnownText: POINT(148.5 6.5)

# position message (left)
- Style: <TextSymbolizer fontset-name='fontset-0' size='12' fill='dimgray' orientation='90' allow-overlap='true'>'Positionsangabe Zonenfeld Meldequadrat Ostwert Nordwert  ·  Beispiel Kartenmitte 32U MU 10 30'</TextSymbolizer>
  WellKnownText: POINT(6.5 105.0)

# copyright (right)
- Style: <TextSymbolizer fontset-name='fontset-0' size='12' fill='dimgray' orientation='90' allow-overlap='true'>'Kartendaten © OpenStreetMap contributors  ·  Datenaktualität 2018/09/27'</TextSymbolizer>
  WellKnownText: POINT(290.5 105.0)

# title
#- Style: <TextSymbolizer fontset-name='fontset-2' size='100' fill='dimgray' opacity='0.2' allow-overlap='true'>'Sylt'</TextSymbolizer>
#  WellKnownText: POINT(90.0 146.0)

# copyright
- Style: <TextSymbolizer fontset-name='fontset-0' size='12' fill='dimgray' orientation='90' allow-overlap='true'>'© Vonpupp'</TextSymbolizer>
  WellKnownText: POINT(10.0 297)

# user files to upload
# --------------------

UserFiles:
# 'track'
#- mytrack.gpx
# 'scale bar'
#- scalebar-2000.geojson
- utmlatgrid1000.geojson
- utmlongrid1000.geojson
- MGRS_100kmSQ_ID_30S.sbx
- MGRS_100kmSQ_ID_30S.shp
- MGRS_100kmSQ_ID_30S.shp.xml
- MGRS_100kmSQ_ID_30S.shx
- MGRS_100kmSQ_ID_30S.dbf
- MGRS_100kmSQ_ID_30S.prj
- MGRS_100kmSQ_ID_30S.sbn

# Documentation
# -------------
# ln -sf ../../../printmaps printmaps
# ./printmaps template
# %s/420/297
# %s/400/277
# %s/594/210
# %s/574/190
# %s/530/146
# Edit
# ./upload.sh
# Wait for a little until data is shown and status is 200 OK
# ./printmaps state > state.txt
# ./download
#
# Setting up margins
# printmaps passepartout 297.0 210.0 20.0 20.0 20.0 20.0
# Add first and last value to the frame and border sections
#
# Downloading shapes
# Firefox "https://earth-info.nga.mil/GandG/coordsys/grids/mgrs_100km_dloads.html"
# Download grid 30S
# mv ~/Downloads/MGRS_100kmSQ_ID_30S.zip .
# unzip MGRS_100kmSQ_ID_30S.zip
# mv Shapefiles/100kmSQ_ID_set6/Zone30/n/* .
# /sbin/rm -rf Shapefiles
#
# Setting up grid
# I used the original sample10.zip utmgrid commandline as an example to reverse
# and understand the process:
#   ./printmaps utmgrid "32 North 380000 5300000" "32 North 440000 5400000" 1000
# - I accessed the site https://www.movable-type.co.uk/scripts/latlong-utm-mgrs.html
#   on 2 tabs
# - Used UTM "32 North 380000 5300000" on the first tab
# - Used UTM "32 North 440000 5400000" on the second tab
# - I noticed it defined the extremes of a rectangle and it got converted to
#   lat and long
# - Knowing that I did the oposite using the lat,long min and max given by:
#   ./printmaps state:
# "MapBuildBoxWGS84": {
#     "LonMin": -4.45919095223,
#     "LatMin": 36.6628374001,
#     "LonMax": -4.29280904777,
#     "LatMax": 36.7571336705
# }
# - So I used:
#   - min (tab 1): 36.662837400° N, -4.45919095223° W
#     - UTM: 30 N 369592 4058463
#     - Military: 30S UF 69591 58462
#   - max (tab 2): 36.7571336705° N, -4.29280904777° W
#     - UTM: 30 N 384603 4068710
#     - Military: 30S UF 84603 68710
# - With those values, I constructed the appropriate utmgrid command:
#   ./printmaps utmgrid "30 N 369592 4058463" "30 N 384603 4068710" 1000
#
# Change the title
# Use the smaler
#
# Change copyright
# Edit the text
